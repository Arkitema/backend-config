[tool.poetry]
name = "lcaplatform-config"
version = "0.4.0"
description = "Configurations for LCA platform FastAPI apps"
authors = ["Egidijus Lukosevicius <egls@cowi.com>"]
repository = "https://github.com/Arkitema/backend-config"
packages = [{include = "lcaplatform_config", from = "src"}]
license = "Apache-2.0"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "*"
fastapi = {extras = ["all"], version = "*"}  # https://github.com/fastapi/fastapi/issues/11143
strawberry-graphql = {extras = ["fastapi"], version = ">=0.164.0"}
fastapi-azure-auth = ">=4.0.0"
aiocache = "*"
SQLAlchemy = {extras = ["asyncio"], version = "*"}
msgraph-core = "*"
sendgrid = "*"
requests = "*"
opentelemetry-api = "*"
opentelemetry-sdk = "*"
prometheus-client = "*"
opentelemetry-exporter-otlp = "*"
opentelemetry-instrumentation-fastapi = "*"
opentelemetry-instrumentation-logging = "*"
pydantic-settings = "*"
azure-identity = "*"
msgraph-sdk = "*"
sqlmodel = "*"
asyncpg = "*"
mypy = "*"
ruff = "*" 

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pytest-env = "*"
pytest_httpx = "*"
pytest-asyncio = "*"
black = "==23.1.0"
isort = "==5.12.0"
pytest-mock = "^3.10.0"

[tool.poetry.extras]
database = ["SQLAlchemy", "sqlmodel", "asyncpg"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
pythonpath = "src"
testpaths = ["tests/"]

env = [
    "SERVER_NAME=Arkitema Test",
    "SERVER_HOST=http://api.arkitema.com",
    "PROJECT_NAME=LCA Test",
    "POSTGRES_HOST=localhost",
    "POSTGRES_USER=postgresuser",
    "POSTGRES_PASSWORD=mypassword",
    "POSTGRES_DB=arkitema",
    "POSTGRES_PORT=5632",
    "AAD_OPENAPI_CLIENT_ID=PALCEHOLDER",
    "AAD_APP_CLIENT_ID=PALCEHOLDER",
    "AAD_TENANT_ID=PALCEHOLDER",
    "AAD_TEST_CLIENT_SECRET=PALCEHOLDER",
    "STORAGE_ACCOUNT_URL=PALCEHOLDER",
    "ROUTER_URL=http://router.url",
    "STORAGE_CONTAINER_NAME=PALCEHOLDER",
    "STORAGE_ACCESS_KEY=PLACEHOLDER",
    "STORAGE_BASE_PATH=test",
    "SPECKLE_TOKEN=PALCEHOLDER",
    "AAD_GRAPH_SECRET=PLACEHOLDER",
    "DEFAULT_AD_FQDN=PLACEHOLDER",
    "SENDGRID_SECRET=c2VjcmV0",
    "EMAIL_NOTIFICATION_FROM=no-reply@arkitema.com",
    "INTERNAL_EMAIL_DOMAINS_LIST=arkitema,cowi,cowicloud",
]

[tool.coverage.run]
omit = ["src/import_data/*.py", "src/initialize.py", "src/main.py"]

[tool.black]
line-length = 120
target-version = ['py310']
extend-exclude = """
^/alembic
"""

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
show_error_codes = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
exclude = ["alembic", "dist", "src/schema", "tests"]
ignore_missing_imports = true
plugins = ["pydantic.mypy", "strawberry.ext.mypy_plugin"] 

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "alembic",
]

src = ["src", "tests"]
line-length = 120
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "UP", "RUF"]
ignore = [
    "E712",  # Allow using if x == False, as it's not always equivalent to if x.
    "E501",  # Supress line-too-long warnings: trust black's judgement on this one.
    "UP017",  # Allow timezone.utc instead of datetime.UTC.
    "D213",
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"